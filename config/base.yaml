num_clients: 30
num_rounds: 100
round_timeout: 1200
client_resources:
  num_cpus: 1
  num_gpus: 0.5
mi_type: "GAUSSIAN"

partitioners:
  train: 
    _target_: flwr_datasets.partitioner.DirichletPartitioner 
    num_partitions: ${num_clients}
    alpha: 0.5
    partition_by: fine_label

fit_config:
  epochs: 2
  batch_size: 64
  mi_type: ${mi_type}
  optimizer:
    _target_: torch.optim.SGD
    lr: 0.01
    momentum: 0.9
  criterion:
    _target_: torch.nn.CrossEntropyLoss
  distiller:
    _target_: nectar.loss.kl.DistillLoss
    temp: 3.0
    gamma: 0.5

workload: cifar100

model:
  _target_: nectar.models.${workload}.resnet50.ResNet50

dataset:
  load_dataset:
    _target_: nectar.workloads.${workload}.load_dataset
  train_fn:
    _target_: nectar.workloads.${workload}.train_fn
    distill: true
  test_fn:
    _target_: nectar.workloads.${workload}.test_fn
  mi_fn:
    _target_: nectar.workloads.${workload}.mi_fn



desc: "MI 2.5%,5% with KTop 10,15 vs 20%"

strategy:
  _target_: nectar.strategy.mifl.MIFL
  # _target_: nectar.strategy.dynamifl.DynaMIFL
  # _target_: flwr.server.strategy.FedAvg
  min_fit_clients: ${num_clients}
  fraction_evaluate: 1
  min_available_clients: ${num_clients}
  mi_type: ${mi_type}
  # trigger_round: 10
  # optimize: False
 # critical_value_fn:
#    _target_: nectar.strategy.dynmifl.light_step
  critical_value: 0.025
  # k_top: 10
  # opti_rounds: 15
  # lottery_ratio: 0.3
  


  
# desc: "MI 2.5%,5% with KTop 10,15 vs 20%"

# strategy:
#   _target_: nectar.strategy.mifl.MIFL
#   # _target_: nectar.strategy.dynamifl.DynaMIFL
#   # _target_: flwr.server.strategy.FedAvg
#   min_fit_clients: ${num_clients}
#   fraction_evaluate: 1
#   min_available_clients: ${num_clients}
#   mi_type: ${mi_type}
#   # trigger_round: 10
#   # optimize: False
#  # critical_value_fn:
# #    _target_: nectar.strategy.dynmifl.light_step
#   critical_value: 0.025
#   k_top: 10
#   # opti_rounds: 15
#   # lottery_ratio: 0.3
  

